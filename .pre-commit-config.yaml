# Pre-commit hooks configuration for Building Energy Optimizer
# Automatically run code quality checks before each commit

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=100]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --ignore=E203,W503]
        additional_dependencies: [flake8-docstrings, flake8-import-order]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --show-error-codes]
        additional_dependencies: [types-requests, types-redis]

  # Security
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -f, txt]
        exclude: tests/

  # General code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      
      # JSON/YAML validation
      - id: check-json
      - id: check-yaml
      - id: check-toml
      
      # Python-specific
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]
      
      # Security
      - id: detect-private-key
      - id: check-merge-conflict
      
      # File size and naming
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      
      # Requirements
      - id: requirements-txt-fixer

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Python dependency security
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: tests/

# Configuration for specific hooks

# Black configuration (can also be in pyproject.toml)
# [tool.black]
# line-length = 100
# target-version = ['py38', 'py39', 'py310', 'py311']
# include = '\.pyi?$'
# extend-exclude = '''
# /(
#   \.eggs
#   | \.git
#   | \.hg
#   | \.mypy_cache
#   | \.tox
#   | \.venv
#   | _build
#   | buck-out
#   | build
#   | dist
# )/
# '''

# isort configuration (can also be in pyproject.toml)
# [tool.isort]
# profile = "black"
# line_length = 100
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0
# use_parentheses = true
# ensure_newline_before_comments = true

# Installation and usage:
# 1. Install pre-commit: pip install pre-commit
# 2. Install hooks: pre-commit install  
# 3. Run on all files: pre-commit run --all-files
# 4. Update hooks: pre-commit autoupdate

# To skip hooks temporarily:
# git commit -m "commit message" --no-verify

# To run specific hook:
# pre-commit run black --all-files
# pre-commit run flake8 --all-files
